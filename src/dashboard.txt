import React from "react";
import { 
  FolderIcon, StarIcon, ShareIcon, TrashIcon, SettingsIcon, 
  Search, Bell, Plus, Upload, FolderPlus, Filter, MoreVertical 
} from "lucide-react";

const Dashboard = () => {
  return (
    <div className="flex min-h-screen bg-gray-50">
      <Sidebar />
      <MainContent />
    </div>
  );
};

const Sidebar = () => {
  const storageData = [
    { label: "Photo", size: "11 GB", color: "bg-blue-500" },
    { label: "Video", size: "19 GB", color: "bg-red-500" },
    { label: "Document", size: "25 GB", color: "bg-green-500" },
    { label: "Free Storage", size: "45 GB", color: "bg-gray-300" },
  ];

  return (
    <div className="w-64 bg-white border-r border-gray-200 p-4">
      <div className="flex items-center mb-6">
        <div className="w-8 h-8 bg-gray-900 rounded-lg mr-2"></div>
        <span className="text-xl font-semibold">Cloudnest</span>
      </div>

      <div className="space-y-2">
        {[
          { label: "All Files", icon: <FolderIcon /> },
       
          { label: "Favorite", icon: <StarIcon /> },
          { label: "Shared Files", icon: <ShareIcon /> },
          { label: "Delete Files", icon: <TrashIcon /> },
          { label: "Settings", icon: <SettingsIcon /> },
        ].map(({ label, icon }) => (
          <button key={label} className="w-full text-gray-700 p-2 rounded-lg flex items-center">
            {React.cloneElement(icon, { className: "w-5 h-5 mr-2" })}
            {label}
          </button>
        ))}
      </div>

      <div className="mt-8">
        <h3 className="text-gray-500 mb-2">Folders</h3>
        {["Landing Page", "Mobile", "Dashboard", "Footer"].map((folder) => (
          <div key={folder} className="flex items-center text-gray-700 p-2">
            <FolderIcon className="w-5 h-5 text-yellow-400 mr-2" />
            {folder}
          </div>
        ))}
      </div>

      <div className="mt-8">
        {storageData.map(({ label, size, color }) => (
          <div key={label} className="flex items-center justify-between text-sm">
            <div className="flex items-center">
              <div className={w-3 h-3 ${color} rounded-full mr-2}></div>
              <span>{label}</span>
            </div>
            <span className="text-gray-500">{size}</span>
          </div>
        ))}
        <div className="mt-4 bg-gray-200 h-2 rounded-full">
          <div className="bg-gray-800 h-full w-3/4 rounded-full"></div>
        </div>
        <div className="mt-2 text-sm text-gray-500">
          <span>55GB used</span> <span className="mx-1">of</span> <span>100GB</span>
        </div>
        <button className="mt-4 w-full bg-gray-900 text-white p-2 rounded-lg">
          Upgrade Premium
        </button>
      </div>
    </div>
  );
};

const MainContent = () => {
  return (
    <div className="flex-1 p-6">
      <div className="flex justify-between items-center mb-6">
        <div className="flex-1 max-w-xl">
          <div className="relative">
            <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-5 h-5" />
            <input
              type="text"
              placeholder="Search"
              className="w-full pl-10 pr-4 py-2 border border-gray-200 rounded-lg"
            />
          </div>
        </div>
        <div className="flex items-center space-x-4">
          <button className="p-2 text-gray-500 hover:bg-gray-100 rounded-lg">
            <Bell className="w-5 h-5" />
          </button>
          <button className="flex items-center px-4 py-2 bg-gray-900 text-white rounded-lg">
            <Plus className="w-5 h-5 mr-2" />
            Invite member
          </button>
        </div>
      </div>

      <h1 className="text-2xl font-semibold mb-1">Welcome back, Martin Mickael</h1>
      <p className="text-gray-500 mb-6">Welcome back! Let's continue your activity on the dashboard.</p>

      <div className="flex justify-end items-center mb-6 space-x-4">
      {[
        { label: "Create", icon: <Plus />, path: "/create" },
        { label: "Upload or drop", icon: <Upload />, path: "/upload" },
        { label: "Create folder", icon: <FolderPlus />, path: "/create-folder" },
      ].map(({ label, icon, path }) => (
        <button 
          key={label} 
          onClick={() => navigate(path)} 
          className="flex items-center px-4 py-2 bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200 transition"
        >
          {React.cloneElement(icon, { className: "w-5 h-5 mr-2" })}
          {label}
        </button>
      ))}
    </div>


      <FolderGrid />

      <h2 className="text-lg font-semibold mt-8 mb-4">Suggested from your activity</h2>
      <div className="grid grid-cols-4 gap-4">
        {["DOCX", "JPG", "PDF", "PNG"].map((type) => (
          <div key={type} className="p-6 bg-gray-50 rounded-lg">
            <div className="w-40 h-40 bg-yellow-400 rounded-lg mb-2"></div>
            <span className="text-gray-700">{type}</span>
          </div>
        ))}
      </div>

      <h2 className="text-lg font-semibold mt-8 mb-4">Your Files</h2>
      <FileTable />
    </div>
  );
};

const MainContent = () => {
  const [folders, setFolders] = useState([
    "UI UX Design",
    "Legal Docs",
    "Reports",
    "Presentations",
    "Documents",
    "Template",
    "Important",
    "Meetings",
    "Resources",
    "Client Files",
  ]);
  const [isPopupOpen, setIsPopupOpen] = useState(false);
  const [newFolderName, setNewFolderName] = useState("");

  const handleCreateFolder = () => {
    if (newFolderName.trim()) {
      setFolders([...folders, newFolderName.trim()]);
      setNewFolderName("");
      setIsPopupOpen(false);
    }
  };

  return (
    <div className="flex-1 p-6">
      <div className="flex justify-between items-center mb-6">
        <div className="flex-1 max-w-xl">
          <div className="relative">
            <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-5 h-5" />
            <input
              type="text"
              placeholder="Search"
              className="w-full pl-10 pr-4 py-2 border border-gray-200 rounded-lg"
            />
          </div>
        </div>
        <div className="flex items-center space-x-4">
          <button className="p-2 text-gray-500 hover:bg-gray-100 rounded-lg">
            <Bell className="w-5 h-5" />
          </button>
          <button className="flex items-center px-4 py-2 bg-gray-900 text-white rounded-lg">
            <Plus className="w-5 h-5 mr-2" />
            Invite member
          </button>
        </div>
      </div>

      <div className="flex justify-end items-center mb-6 space-x-4">
        <button
          onClick={() => setIsPopupOpen(true)}
          className="flex items-center px-4 py-2 bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200 transition"
        >
          <FolderPlus className="w-5 h-5 mr-2" />
          Create folder
        </button>
      </div>

      {isPopupOpen && (
        <div className="fixed inset-0 flex items-center justify-center bg-gray-900 bg-opacity-50">
          <div className="bg-white p-6 rounded-lg shadow-lg w-80">
            <h2 className="text-lg font-semibold mb-4">Create New Folder</h2>
            <input
              type="text"
              value={newFolderName}
              onChange={(e) => setNewFolderName(e.target.value)}
              className="w-full p-2 border rounded-lg mb-4"
              placeholder="Folder name"
            />
            <div className="flex justify-end space-x-2">
              <button onClick={() => setIsPopupOpen(false)} className="px-4 py-2 bg-gray-200 rounded-lg">Cancel</button>
              <button onClick={handleCreateFolder} className="px-4 py-2 bg-blue-600 text-white rounded-lg">Create</button>
            </div>
          </div>
        </div>
      )}

      <FolderGrid folders={folders} />
    </div>
  );
};

const FolderGrid = ({ folders }) => {
  return (
    <div className="grid grid-cols-5 gap-4">
      {folders.map((folder) => (
        <div key={folder} className="p-4 bg-white shadow rounded-lg flex items-center justify-between">
          <span className="text-gray-700">{folder}</span>
          <MoreVertical className="w-5 h-5 text-gray-400" />
        </div>
      ))}
    </div>
  );
};


const FileTable = () => {
  return (
    <div className="border border-gray-200 rounded-lg p-4">
      <p className="text-gray-500">No recent files available</p>
    </div>
  );
};

export default Dashboard;